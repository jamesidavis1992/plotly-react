{"version":3,"sources":["../src/plotly.js-react.js"],"names":[],"mappings":";;;;;;;;kBAqDwB,qB;;AArDxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,SAAS,eAAT,CAAyB,IAAzB,EAA+B;AAC7B,MAAI,OAAO,OAAO,IAAP,CAAY,IAAZ,CAAX;AACD;;AAED;AACA;AACA;AACA,IAAM,aAAa,CACjB,aADiB,EAEjB,WAFiB,EAGjB,UAHiB,EAIjB,gBAJiB,EAKjB,sBALiB,EAMjB,UANiB,EAOjB,cAPiB,EAQjB,eARiB,EASjB,OATiB,EAUjB,iBAViB,EAWjB,UAXiB,EAYjB,aAZiB,EAajB,WAbiB,EAcjB,OAdiB,EAejB,UAfiB,EAgBjB,SAhBiB,EAiBjB,QAjBiB,EAkBjB,UAlBiB,EAmBjB,WAnBiB,EAoBjB,cApBiB,EAqBjB,WArBiB,EAsBjB,aAtBiB,EAuBjB,eAvBiB,EAwBjB,uBAxBiB,EAyBjB,SAzBiB,CAAnB;;AA4BA,IAAM,eAAe,CACnB,gBADmB,EAEnB,eAFmB,EAGnB,iBAHmB,EAInB,oBAJmB,EAKnB,iBALmB,CAArB;;AAQA;AACA;AACA,IAAM,YAAY,OAAO,MAAP,KAAkB,WAApC;;AAEe,SAAS,qBAAT,CAA+B,MAA/B,EAAuC;AACpD,MAAM,oBAAoB,CAAC,CAAC,OAAO,KAAnC;;AADoD,MAG9C,eAH8C;AAAA;;AAIlD,6BAAY,KAAZ,EAAmB;AAAA;;AAAA,oIACX,KADW;;AAGjB,YAAK,CAAL,GAAS,QAAQ,OAAR,EAAT;AACA,YAAK,aAAL,GAAqB,IAArB;AACA,YAAK,QAAL,GAAgB,EAAhB;;AAEA,YAAK,gBAAL,GAAwB,MAAK,gBAAL,CAAsB,IAAtB,OAAxB;AACA,YAAK,iBAAL,GAAyB,MAAK,iBAAL,CAAuB,IAAvB,OAAzB;AACA,YAAK,kBAAL,GAA0B,MAAK,kBAAL,CAAwB,IAAxB,OAA1B;AACA,YAAK,MAAL,GAAc,MAAK,MAAL,CAAY,IAAZ,OAAd;;AAEA;AACA,YAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AAbiB;AAclB;;AAlBiD;AAAA;AAAA,0CAoB9B;AAAA;;AAClB,aAAK,CAAL,GAAS,KAAK,CAAL,CACN,IADM,CACD,YAAM;AACV,iBAAO,OAAO,OAAP,CAAe,OAAK,EAApB,EAAwB;AAC7B,kBAAM,OAAK,KAAL,CAAW,IADY;AAE7B,oBAAQ,OAAK,kBAAL,CAAwB,OAAK,KAAL,CAAW,MAAnC,CAFqB;AAG7B,oBAAQ,OAAK,KAAL,CAAW,MAHU;AAI7B,oBAAQ,OAAK,KAAL,CAAW;AAJU,WAAxB,CAAP;AAMD,SARM,EASN,IATM,CASD,KAAK,kBATJ,EAUN,IAVM,CAUD;AAAA,iBAAM,OAAK,gBAAL,CAAsB,IAAtB,EAA4B,KAA5B,CAAN;AAAA,SAVC,EAWN,IAXM,CAWD;AAAA,iBAAM,OAAK,iBAAL,EAAN;AAAA,SAXC,EAYN,IAZM,CAaL,KAAK,YAbA,EAcL,YAAM;AACJ,iBAAK,KAAL,CAAW,OAAX,IAAsB,OAAK,KAAL,CAAW,OAAX,EAAtB;AACD,SAhBI,CAAT;AAkBD;AAvCiD;AAAA;AAAA,gDAyCxB,SAzCwB,EAyCb;AAAA;;AACnC,YAAI,iBAAJ;AAAA,YAAc,mBAAd;AAAA,YAA0B,mBAA1B;AACA,YAAI,aAAa,KAAK,kBAAL,CAAwB,UAAU,MAAlC,CAAjB;;AAEA,aAAK,CAAL,GAAS,KAAK,CAAL,CACN,IADM,CACD,YAAM;AACV,cAAI,iBAAJ,EAAuB;AACrB,mBAAO,OAAO,KAAP,CAAa,OAAK,EAAlB,EAAsB;AAC3B,oBAAM,UAAU,IADW;AAE3B,sBAAQ,UAFmB;AAG3B,sBAAQ,UAAU,MAHS;AAI3B,sBAAQ,UAAU;AAJS,aAAtB,CAAP;AAMD,WAPD,MAOO;AACL,mBAAO,OAAO,OAAP,CAAe,OAAK,EAApB,EAAwB;AAC7B,oBAAM,UAAU,IADa;AAE7B,sBAAQ,UAFqB;AAG7B,sBAAQ,UAAU,MAHW;AAI7B,sBAAQ,UAAU;AAJW,aAAxB,CAAP;AAMD;AACF,SAjBM,EAkBN,IAlBM,CAkBD;AAAA,iBAAM,OAAK,iBAAL,CAAuB,SAAvB,CAAN;AAAA,SAlBC,EAmBN,IAnBM,CAmBD;AAAA,iBAAM,OAAK,gBAAL,CAAsB,SAAtB,CAAN;AAAA,SAnBC,EAoBN,IApBM,CAoBD;AAAA,iBAAM;AAAA,mBAAM,OAAK,YAAL,CAAkB,SAAlB,CAAN;AAAA,WAAN;AAAA,SApBC,EAqBN,KArBM,CAqBA,eAAO;AACZ,iBAAK,KAAL,CAAW,OAAX,IAAsB,OAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,CAAtB;AACD,SAvBM,CAAT;AAwBD;AArEiD;AAAA;AAAA,6CAuE3B;AACrB,YAAI,KAAK,aAAL,IAAsB,SAA1B,EAAqC;AACnC,iBAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,YAA1C;AACA,eAAK,aAAL,GAAqB,IAArB;AACD;;AAED,aAAK,kBAAL;;AAEA,eAAO,KAAP,CAAa,KAAK,EAAlB;AACD;AAhFiD;AAAA;AAAA,2CAkF7B;AACnB,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,aAAa,MAAjC,EAAyC,GAAzC,EAA8C;AAC5C,eAAK,EAAL,CAAQ,EAAR,CAAW,aAAa,CAAb,CAAX,EAA4B,KAAK,YAAjC;AACD;AACF;AAtFiD;AAAA;AAAA,2CAwF7B;AACnB,YAAI,CAAC,KAAK,EAAN,IAAY,CAAC,KAAK,EAAL,CAAQ,GAAzB,EAA8B;;AAE9B,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,aAAa,MAAjC,EAAyC,GAAzC,EAA8C;AAC5C,eAAK,EAAL,CAAQ,GAAR,CAAY,aAAa,CAAb,CAAZ,EAA6B,KAAK,YAAlC;AACD;AACF;AA9FiD;AAAA;AAAA,mCAgGrC,KAhGqC,EAgG9B;AAClB,gBAAQ,SAAS,KAAK,KAAtB;AACA,YAAI,MAAM,QAAN,IAAkB,OAAO,MAAM,QAAb,KAA0B,UAAhD,EAA4D;AAC1D,gBAAM,QAAN,CAAe,KAAK,EAApB;AACD;AACF;AArGiD;AAAA;AAAA,uCAuGjC,KAvGiC,EAuG1B,MAvG0B,EAuGlB;AAAA;;AAC9B,gBAAQ,SAAS,KAAK,KAAtB;AACA,YAAI,CAAC,SAAL,EAAgB;;AAEhB,YAAI,MAAM,GAAN,IAAa,CAAC,KAAK,aAAvB,EAAsC;AACpC,eAAK,aAAL,GAAqB,YAAM;AACzB,mBAAO,OAAO,QAAP,CAAgB,OAAK,EAArB,EAAyB,OAAK,OAAL,EAAzB,CAAP;AACD,WAFD;AAGA,iBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,aAAvC;;AAEA,cAAI,MAAJ,EAAY,OAAO,KAAK,aAAL,EAAP;AACb,SAPD,MAOO,IAAI,CAAC,MAAM,GAAP,IAAc,KAAK,aAAvB,EAAsC;AAC3C,iBAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,aAA1C;AACA,eAAK,aAAL,GAAqB,IAArB;AACD;AACF;AAtHiD;AAAA;AAAA,6BAwH3C,EAxH2C,EAwHvC;AACT,aAAK,EAAL,GAAU,EAAV;;AAEA,YAAI,KAAK,KAAL,CAAW,KAAX,IAAoB,SAAxB,EAAmC;AACjC,iBAAO,EAAP,GAAY,KAAK,EAAjB;AACD;AACF;;AAED;;AAhIkD;AAAA;AAAA,wCAiIhC,KAjIgC,EAiIzB;AACvB;AACA,gBAAQ,SAAS,KAAK,KAAtB;;AAEA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,cAAM,YAAY,WAAW,CAAX,CAAlB;AACA,cAAM,OAAO,MAAM,OAAO,SAAb,CAAb;AACA,cAAM,aAAa,CAAC,CAAC,KAAK,QAAL,CAAc,SAAd,CAArB;;AAEA,cAAI,QAAQ,CAAC,UAAb,EAAyB;AACvB,gBAAI,UAAW,KAAK,QAAL,CAAc,SAAd,IAA2B,MAAM,OAAO,SAAb,CAA1C;AACA,iBAAK,EAAL,CAAQ,EAAR,CAAW,YAAY,UAAU,WAAV,EAAvB,EAAgD,OAAhD;AACD,WAHD,MAGO,IAAI,CAAC,IAAD,IAAS,UAAb,EAAyB;AAC9B;AACA,iBAAK,EAAL,CAAQ,GAAR,CACE,YAAY,UAAU,WAAV,EADd,EAEE,KAAK,QAAL,CAAc,SAAd,CAFF;AAIA,mBAAO,KAAK,QAAL,CAAc,SAAd,CAAP;AACD;AACF;AACF;AAtJiD;AAAA;AAAA,yCAwJ/B,MAxJ+B,EAwJvB;AACzB,YAAI,KAAK,KAAL,CAAW,GAAf,EAAoB;AAClB,mBAAS,4BAAa,EAAb,EAAiB,MAAjB,CAAT;AACA,sCAAa,MAAb,EAAqB,KAAK,OAAL,CAAa,MAAb,CAArB;AACD;;AAED,eAAO,MAAP;AACD;AA/JiD;AAAA;AAAA,sCAiKlC;AACd,eAAO,KAAK,EAAL,CAAQ,aAAR,CAAsB,qBAAtB,EAAP;AACD;AAnKiD;AAAA;AAAA,8BAqK1C,MArK0C,EAqKlC;AACd,YAAI,aAAJ;AACA,iBAAS,UAAU,KAAK,KAAL,CAAW,MAA9B;AACA,YAAM,cAAc,SAAS,OAAO,KAAhB,GAAwB,IAA5C;AACA,YAAM,eAAe,SAAS,OAAO,MAAhB,GAAyB,IAA9C;AACA,YAAM,WAAW,6BAAU,WAAV,CAAjB;AACA,YAAM,YAAY,6BAAU,YAAV,CAAlB;;AAEA,YAAI,CAAC,QAAD,IAAa,CAAC,SAAlB,EAA6B;AAC3B,iBAAO,KAAK,aAAL,EAAP;AACD;;AAED,eAAO;AACL,iBAAO,WAAW,SAAS,WAAT,CAAX,GAAmC,KAAK,KAD1C;AAEL,kBAAQ,YAAY,SAAS,YAAT,CAAZ,GAAqC,KAAK;AAF7C,SAAP;AAID;AArLiD;AAAA;AAAA,+BAuLzC;AACP,eAAO;AACL,iBAAO;AACL,sBAAU,UADL;AAEL,qBAAS;AAFJ,WADF;AAKL,eAAK,KAAK;AALL,UAAP;AAOD;AA/LiD;;AAAA;AAAA;;AAkMpD,kBAAgB,SAAhB,GAA4B;AAC1B,SAAK,oBAAU,IADW;AAE1B,UAAM,oBAAU,OAAV,CAAkB,oBAAU,MAA5B,CAFoB;AAG1B,YAAQ,oBAAU,MAHQ;AAI1B,YAAQ,oBAAU,MAJQ;AAK1B,YAAQ,oBAAU,OAAV,CAAkB,oBAAU,MAA5B,CALkB;AAM1B,mBAAe,oBAAU;AANC,GAA5B;;AASA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,WAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,oBAAgB,SAAhB,CAA0B,OAAO,WAAW,CAAX,CAAjC,IAAkD,oBAAU,IAA5D;AACD;;AAED,kBAAgB,YAAhB,GAA+B;AAC7B,WAAO,IADsB;AAE7B,SAAK,KAFwB;AAG7B,UAAM;AAHuB,GAA/B;;AAMA,SAAO,eAAP;AACD","file":"plotly.js-react.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumeric from \"fast-isnumeric\";\nimport objectAssign from \"object-assign\";\nimport throttle from \"throttle-debounce/throttle\";\n\nfunction constructUpdate(diff) {\n  var keys = Object.keys(diff);\n}\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  \"AfterExport\",\n  \"AfterPlot\",\n  \"Animated\",\n  \"AnimatingFrame\",\n  \"AnimationInterrupted\",\n  \"AutoSize\",\n  \"BeforeExport\",\n  \"ButtonClicked\",\n  \"Click\",\n  \"ClickAnnotation\",\n  \"Deselect\",\n  \"DoubleClick\",\n  \"Framework\",\n  \"Hover\",\n  \"Relayout\",\n  \"Restyle\",\n  \"Redraw\",\n  \"Selected\",\n  \"Selecting\",\n  \"SliderChange\",\n  \"SliderEnd\",\n  \"SliderStart\",\n  \"Transitioning\",\n  \"TransitionInterrupted\",\n  \"Unhover\",\n];\n\nconst updateEvents = [\n  \"plotly_restyle\",\n  \"plotly_redraw\",\n  \"plotly_relayout\",\n  \"plotly_doubleclick\",\n  \"plotly_animated\",\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== \"undefined\";\n\nexport default function createPlotlyComponent(Plotly) {\n  const hasReactAPIMethod = !!Plotly.react;\n\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n\n      //this.handleUpdate = throttle(0, this.handleUpdate.bind(this));\n      this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    componentDidMount() {\n      this.p = this.p\n        .then(() => {\n          return Plotly.newPlot(this.el, {\n            data: this.props.data,\n            layout: this.sizeAdjustedLayout(this.props.layout),\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(this.attachUpdateEvents)\n        .then(() => this.syncWindowResize(null, false))\n        .then(() => this.syncEventHandlers())\n        .then(\n          this.handleUpdate,\n          () => {\n            this.props.onError && this.props.onError();\n          }\n        );\n    }\n\n    componentWillReceiveProps(nextProps) {\n      let dataDiff, layoutDiff, configDiff;\n      let nextLayout = this.sizeAdjustedLayout(nextProps.layout);\n\n      this.p = this.p\n        .then(() => {\n          if (hasReactAPIMethod) {\n            return Plotly.react(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          } else {\n            return Plotly.newPlot(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          }\n        })\n        .then(() => this.syncEventHandlers(nextProps))\n        .then(() => this.syncWindowResize(nextProps))\n        .then(() => () => this.handleUpdate(nextProps))\n        .catch(err => {\n          this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUnmount() {\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener(\"resize\", this.handleResize);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.on(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.off) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.off(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    handleUpdate(props) {\n      props = props || this.props;\n      if (props.onUpdate && typeof props.onUpdate === \"function\") {\n        props.onUpdate(this.el);\n      }\n    }\n\n    syncWindowResize(props, invoke) {\n      props = props || this.props;\n      if (!isBrowser) return;\n\n      if (props.fit && !this.resizeHandler) {\n        this.resizeHandler = () => {\n          return Plotly.relayout(this.el, this.getSize());\n        };\n        window.addEventListener(\"resize\", this.resizeHandler);\n\n        if (invoke) return this.resizeHandler();\n      } else if (!props.fit && this.resizeHandler) {\n        window.removeEventListener(\"resize\", this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers(props) {\n      // Allow use of nextProps if passed explicitly:\n      props = props || this.props;\n\n      for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const prop = props[\"on\" + eventName];\n        const hasHandler = !!this.handlers[eventName];\n\n        if (prop && !hasHandler) {\n          let handler = (this.handlers[eventName] = props[\"on\" + eventName]);\n          this.el.on(\"plotly_\" + eventName.toLowerCase(), handler);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.off(\n            \"plotly_\" + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n          delete this.handlers[eventName];\n        }\n      }\n    }\n\n    sizeAdjustedLayout(layout) {\n      if (this.props.fit) {\n        layout = objectAssign({}, layout);\n        objectAssign(layout, this.getSize(layout));\n      }\n\n      return layout;\n    }\n\n    getParentSize() {\n      return this.el.parentElement.getBoundingClientRect();\n    }\n\n    getSize(layout) {\n      let rect;\n      layout = layout || this.props.layout;\n      const layoutWidth = layout ? layout.width : null;\n      const layoutHeight = layout ? layout.height : null;\n      const hasWidth = isNumeric(layoutWidth);\n      const hasHeight = isNumeric(layoutHeight);\n\n      if (!hasWidth || !hasHeight) {\n        rect = this.getParentSize();\n      }\n\n      return {\n        width: hasWidth ? parseInt(layoutWidth) : rect.width,\n        height: hasHeight ? parseInt(layoutHeight) : rect.height,\n      };\n    }\n\n    render() {\n      return <div\n        style={{\n          position: 'relative',\n          display: 'inline-block'\n        }}\n        ref={this.getRef}\n      />;\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    fit: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    onInitialized: PropTypes.func,\n  };\n\n  for (let i = 0; i < eventNames.length; i++) {\n    PlotlyComponent.propTypes[\"on\" + eventNames[i]] = PropTypes.func;\n  }\n\n  PlotlyComponent.defaultProps = {\n    debug: true,\n    fit: false,\n    data: [],\n  };\n\n  return PlotlyComponent;\n}\n"]}