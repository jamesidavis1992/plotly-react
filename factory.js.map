{"version":3,"sources":["../src/factory.js"],"names":["plotComponentFactory","eventNames","updateEvents","isBrowser","window","Plotly","hasReactAPIMethod","react","PlotlyComponent","props","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","nextProps","revision","then","newPlot","el","data","layout","sizeAdjustedLayout","config","frames","onInitialized","catch","console","error","e","onError","nextLayout","err","removeEventListener","handleResize","removeUpdateEvents","purge","i","length","on","off","onUpdate","invoke","fit","relayout","getSize","addEventListener","debug","gd","eventName","prop","hasHandler","handler","toLowerCase","parentElement","getBoundingClientRect","rect","layoutWidth","width","layoutHeight","height","hasWidth","hasHeight","getParentSize","parseInt","position","display","propTypes","bool","arrayOf","object","number","func","defaultProps"],"mappings":"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","file":"factory.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumeric from \"fast-isnumeric\";\nimport objectAssign from \"object-assign\";\n// import throttle from \"throttle-debounce/throttle\";\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  \"AfterExport\",\n  \"AfterPlot\",\n  \"Animated\",\n  \"AnimatingFrame\",\n  \"AnimationInterrupted\",\n  \"AutoSize\",\n  \"BeforeExport\",\n  \"ButtonClicked\",\n  \"Click\",\n  \"ClickAnnotation\",\n  \"Deselect\",\n  \"DoubleClick\",\n  \"Framework\",\n  \"Hover\",\n  \"Relayout\",\n  \"Restyle\",\n  \"Redraw\",\n  \"Selected\",\n  \"Selecting\",\n  \"SliderChange\",\n  \"SliderEnd\",\n  \"SliderStart\",\n  \"Transitioning\",\n  \"TransitionInterrupted\",\n  \"Unhover\",\n];\n\nconst updateEvents = [\n  \"plotly_restyle\",\n  \"plotly_redraw\",\n  \"plotly_relayout\",\n  \"plotly_doubleclick\",\n  \"plotly_animated\",\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== \"undefined\";\n\nexport default function plotComponentFactory(Plotly) {\n  const hasReactAPIMethod = !!Plotly.react;\n\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n\n      //this.handleUpdate = throttle(0, this.handleUpdate.bind(this));\n      this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps) {\n      if (isNumeric(nextProps.revision) && isNumeric(this.props.revision)) {\n        // If revision is numeric, then increment only if revision has increased:\n        return nextProps.revision > this.props.revision;\n      } else {\n        return true;\n      }\n    }\n\n    componentDidMount() {\n      this.p = this.p\n        .then(() => {\n          return Plotly.newPlot(this.el, {\n            data: this.props.data,\n            layout: this.sizeAdjustedLayout(this.props.layout),\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => this.syncWindowResize(null, false))\n        .then(this.syncEventHandlers)\n        .then(this.attachUpdateEvents)\n        .then(\n          () => this.props.onInitialized && this.props.onInitialized(this.el)\n        )\n        .catch(e => {\n          console.error(\"Error while plotting:\", e);\n          return this.props.onError && this.props.onError();\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n      let nextLayout = this.sizeAdjustedLayout(nextProps.layout);\n\n      this.p = this.p\n        .then(() => {\n          if (hasReactAPIMethod) {\n            return Plotly.react(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          } else {\n            return Plotly.newPlot(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          }\n        })\n        .then(() => this.syncEventHandlers(nextProps))\n        .then(() => this.syncWindowResize(nextProps))\n        .then(this.attachUpdateEvents)\n        .then(() => this.handleUpdate(nextProps))\n        .catch(err => {\n          console.error(\"Error while plotting:\", err);\n          this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUnmount() {\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener(\"resize\", this.handleResize);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.on(updateEvents[i], () => {\n          this.handleUpdate();\n        });\n      }\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.off) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.off(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    handleUpdate(props) {\n      props = props || this.props;\n      if (props.onUpdate && typeof props.onUpdate === \"function\") {\n        props.onUpdate(this.el);\n      }\n    }\n\n    syncWindowResize(props, invoke) {\n      props = props || this.props;\n      if (!isBrowser) return;\n\n      if (props.fit && !this.resizeHandler) {\n        this.resizeHandler = () => {\n          return Plotly.relayout(this.el, this.getSize());\n        };\n        window.addEventListener(\"resize\", this.resizeHandler);\n\n        if (invoke) return this.resizeHandler();\n      } else if (!props.fit && this.resizeHandler) {\n        window.removeEventListener(\"resize\", this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers(props) {\n      // Allow use of nextProps if passed explicitly:\n      props = props || this.props;\n\n      for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const prop = props[\"on\" + eventName];\n        const hasHandler = !!this.handlers[eventName];\n\n        if (prop && !hasHandler) {\n          let handler = (this.handlers[eventName] = props[\"on\" + eventName]);\n          this.el.on(\"plotly_\" + eventName.toLowerCase(), handler);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.off(\n            \"plotly_\" + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n          delete this.handlers[eventName];\n        }\n      }\n    }\n\n    sizeAdjustedLayout(layout) {\n      if (this.props.fit) {\n        layout = objectAssign({}, layout);\n        objectAssign(layout, this.getSize(layout));\n      }\n\n      return layout;\n    }\n\n    getParentSize() {\n      return this.el.parentElement.getBoundingClientRect();\n    }\n\n    getSize(layout) {\n      let rect;\n      layout = layout || this.props.layout;\n      const layoutWidth = layout ? layout.width : null;\n      const layoutHeight = layout ? layout.height : null;\n      const hasWidth = isNumeric(layoutWidth);\n      const hasHeight = isNumeric(layoutHeight);\n\n      if (!hasWidth || !hasHeight) {\n        rect = this.getParentSize();\n      }\n\n      return {\n        width: hasWidth ? parseInt(layoutWidth) : rect.width,\n        height: hasHeight ? parseInt(layoutHeight) : rect.height,\n      };\n    }\n\n    render() {\n      return (\n        <div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n          }}\n          ref={this.getRef}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    fit: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n  };\n\n  for (let i = 0; i < eventNames.length; i++) {\n    PlotlyComponent.propTypes[\"on\" + eventNames[i]] = PropTypes.func;\n  }\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    fit: false,\n    data: [],\n  };\n\n  return PlotlyComponent;\n}\n"]}