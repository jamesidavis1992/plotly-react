{"version":3,"sources":["../src/factory.js"],"names":["plotComponentFactory","eventNames","updateEvents","isBrowser","window","Plotly","hasReactAPIMethod","react","PlotlyComponent","props","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","then","newPlot","el","data","layout","sizeAdjustedLayout","config","frames","onInitialized","onError","nextProps","nextLayout","catch","err","removeEventListener","handleResize","removeUpdateEvents","purge","i","length","on","off","onUpdate","invoke","fit","relayout","getSize","addEventListener","debug","gd","eventName","prop","hasHandler","handler","toLowerCase","parentElement","getBoundingClientRect","rect","layoutWidth","width","layoutHeight","height","hasWidth","hasHeight","getParentSize","parseInt","position","display","propTypes","bool","arrayOf","object","func","defaultProps"],"mappings":";;;;;;;;kBAiDwBA,oB;;AAjDxB;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AACA;;AAEA;AACA;AACA;AACA,IAAMC,aAAa,CACjB,aADiB,EAEjB,WAFiB,EAGjB,UAHiB,EAIjB,gBAJiB,EAKjB,sBALiB,EAMjB,UANiB,EAOjB,cAPiB,EAQjB,eARiB,EASjB,OATiB,EAUjB,iBAViB,EAWjB,UAXiB,EAYjB,aAZiB,EAajB,WAbiB,EAcjB,OAdiB,EAejB,UAfiB,EAgBjB,SAhBiB,EAiBjB,QAjBiB,EAkBjB,UAlBiB,EAmBjB,WAnBiB,EAoBjB,cApBiB,EAqBjB,WArBiB,EAsBjB,aAtBiB,EAuBjB,eAvBiB,EAwBjB,uBAxBiB,EAyBjB,SAzBiB,CAAnB;;AA4BA,IAAMC,eAAe,CACnB,gBADmB,EAEnB,eAFmB,EAGnB,iBAHmB,EAInB,oBAJmB,EAKnB,iBALmB,CAArB;;AAQA;AACA;AACA,IAAMC,YAAY,OAAOC,MAAP,KAAkB,WAApC;;AAEe,SAASJ,oBAAT,CAA8BK,MAA9B,EAAsC;AACnD,MAAMC,oBAAoB,CAAC,CAACD,OAAOE,KAAnC;;AADmD,MAG7CC,eAH6C;AAAA;;AAIjD,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACXA,KADW;;AAGjB,YAAKC,CAAL,GAASC,QAAQC,OAAR,EAAT;AACA,YAAKC,aAAL,GAAqB,IAArB;AACA,YAAKC,QAAL,GAAgB,EAAhB;;AAEA,YAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,OAAxB;AACA,YAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;AACA,YAAKE,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBF,IAAxB,OAA1B;AACA,YAAKG,MAAL,GAAc,MAAKA,MAAL,CAAYH,IAAZ,OAAd;;AAEA;AACA,YAAKI,YAAL,GAAoB,MAAKA,YAAL,CAAkBJ,IAAlB,OAApB;AAbiB;AAclB;;AAlBgD;AAAA;AAAA,0CAoB7B;AAAA;;AAClB,aAAKN,CAAL,GAAS,KAAKA,CAAL,CACNW,IADM,CACD,YAAM;AACV,iBAAOhB,OAAOiB,OAAP,CAAe,OAAKC,EAApB,EAAwB;AAC7BC,kBAAM,OAAKf,KAAL,CAAWe,IADY;AAE7BC,oBAAQ,OAAKC,kBAAL,CAAwB,OAAKjB,KAAL,CAAWgB,MAAnC,CAFqB;AAG7BE,oBAAQ,OAAKlB,KAAL,CAAWkB,MAHU;AAI7BC,oBAAQ,OAAKnB,KAAL,CAAWmB;AAJU,WAAxB,CAAP;AAMD,SARM,EASNP,IATM,CASD,KAAKH,kBATJ,EAUNG,IAVM,CAUD;AAAA,iBAAM,OAAKN,gBAAL,CAAsB,IAAtB,EAA4B,KAA5B,CAAN;AAAA,SAVC,EAWNM,IAXM,CAWD;AAAA,iBAAM,OAAKJ,iBAAL,EAAN;AAAA,SAXC,EAYNI,IAZM,CAaL,YAAM;AACJ,iBAAKZ,KAAL,CAAWoB,aAAX,IAA4B,OAAKpB,KAAL,CAAWoB,aAAX,CAAyB,OAAKN,EAA9B,CAA5B;AACD,SAfI,EAgBL,YAAM;AACJ,iBAAKd,KAAL,CAAWqB,OAAX,IAAsB,OAAKrB,KAAL,CAAWqB,OAAX,EAAtB;AACD,SAlBI,CAAT;AAoBD;AAzCgD;AAAA;AAAA,gDA2CvBC,SA3CuB,EA2CZ;AAAA;;AACnC,YAAIC,aAAa,KAAKN,kBAAL,CAAwBK,UAAUN,MAAlC,CAAjB;;AAEA,aAAKf,CAAL,GAAS,KAAKA,CAAL,CACNW,IADM,CACD,YAAM;AACV,cAAIf,iBAAJ,EAAuB;AACrB,mBAAOD,OAAOE,KAAP,CAAa,OAAKgB,EAAlB,EAAsB;AAC3BC,oBAAMO,UAAUP,IADW;AAE3BC,sBAAQO,UAFmB;AAG3BL,sBAAQI,UAAUJ,MAHS;AAI3BC,sBAAQG,UAAUH;AAJS,aAAtB,CAAP;AAMD,WAPD,MAOO;AACL,mBAAOvB,OAAOiB,OAAP,CAAe,OAAKC,EAApB,EAAwB;AAC7BC,oBAAMO,UAAUP,IADa;AAE7BC,sBAAQO,UAFqB;AAG7BL,sBAAQI,UAAUJ,MAHW;AAI7BC,sBAAQG,UAAUH;AAJW,aAAxB,CAAP;AAMD;AACF,SAjBM,EAkBNP,IAlBM,CAkBD;AAAA,iBAAM,OAAKJ,iBAAL,CAAuBc,SAAvB,CAAN;AAAA,SAlBC,EAmBNV,IAnBM,CAmBD;AAAA,iBAAM,OAAKN,gBAAL,CAAsBgB,SAAtB,CAAN;AAAA,SAnBC,EAoBNV,IApBM,CAoBD;AAAA,iBAAM,OAAKD,YAAL,CAAkBW,SAAlB,CAAN;AAAA,SApBC,EAqBNE,KArBM,CAqBA,eAAO;AACZ,iBAAKxB,KAAL,CAAWqB,OAAX,IAAsB,OAAKrB,KAAL,CAAWqB,OAAX,CAAmBI,GAAnB,CAAtB;AACD,SAvBM,CAAT;AAwBD;AAtEgD;AAAA;AAAA,6CAwE1B;AACrB,YAAI,KAAKrB,aAAL,IAAsBV,SAA1B,EAAqC;AACnCC,iBAAO+B,mBAAP,CAA2B,QAA3B,EAAqC,KAAKC,YAA1C;AACA,eAAKvB,aAAL,GAAqB,IAArB;AACD;;AAED,aAAKwB,kBAAL;;AAEAhC,eAAOiC,KAAP,CAAa,KAAKf,EAAlB;AACD;AAjFgD;AAAA;AAAA,2CAmF5B;AACnB,aAAK,IAAIgB,IAAI,CAAb,EAAgBA,IAAIrC,aAAasC,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,eAAKhB,EAAL,CAAQkB,EAAR,CAAWvC,aAAaqC,CAAb,CAAX,EAA4B,KAAKnB,YAAjC;AACD;AACF;AAvFgD;AAAA;AAAA,2CAyF5B;AACnB,YAAI,CAAC,KAAKG,EAAN,IAAY,CAAC,KAAKA,EAAL,CAAQmB,GAAzB,EAA8B;;AAE9B,aAAK,IAAIH,IAAI,CAAb,EAAgBA,IAAIrC,aAAasC,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,eAAKhB,EAAL,CAAQmB,GAAR,CAAYxC,aAAaqC,CAAb,CAAZ,EAA6B,KAAKnB,YAAlC;AACD;AACF;AA/FgD;AAAA;AAAA,mCAiGpCX,KAjGoC,EAiG7B;AAClBA,gBAAQA,SAAS,KAAKA,KAAtB;AACA,YAAIA,MAAMkC,QAAN,IAAkB,OAAOlC,MAAMkC,QAAb,KAA0B,UAAhD,EAA4D;AAC1DlC,gBAAMkC,QAAN,CAAe,KAAKpB,EAApB;AACD;AACF;AAtGgD;AAAA;AAAA,uCAwGhCd,KAxGgC,EAwGzBmC,MAxGyB,EAwGjB;AAAA;;AAC9BnC,gBAAQA,SAAS,KAAKA,KAAtB;AACA,YAAI,CAACN,SAAL,EAAgB;;AAEhB,YAAIM,MAAMoC,GAAN,IAAa,CAAC,KAAKhC,aAAvB,EAAsC;AACpC,eAAKA,aAAL,GAAqB,YAAM;AACzB,mBAAOR,OAAOyC,QAAP,CAAgB,OAAKvB,EAArB,EAAyB,OAAKwB,OAAL,EAAzB,CAAP;AACD,WAFD;AAGA3C,iBAAO4C,gBAAP,CAAwB,QAAxB,EAAkC,KAAKnC,aAAvC;;AAEA,cAAI+B,MAAJ,EAAY,OAAO,KAAK/B,aAAL,EAAP;AACb,SAPD,MAOO,IAAI,CAACJ,MAAMoC,GAAP,IAAc,KAAKhC,aAAvB,EAAsC;AAC3CT,iBAAO+B,mBAAP,CAA2B,QAA3B,EAAqC,KAAKtB,aAA1C;AACA,eAAKA,aAAL,GAAqB,IAArB;AACD;AACF;AAvHgD;AAAA;AAAA,6BAyH1CU,EAzH0C,EAyHtC;AACT,aAAKA,EAAL,GAAUA,EAAV;;AAEA,YAAI,KAAKd,KAAL,CAAWwC,KAAX,IAAoB9C,SAAxB,EAAmC;AACjCC,iBAAO8C,EAAP,GAAY,KAAK3B,EAAjB;AACD;AACF;;AAED;;AAjIiD;AAAA;AAAA,wCAkI/Bd,KAlI+B,EAkIxB;AACvB;AACAA,gBAAQA,SAAS,KAAKA,KAAtB;;AAEA,aAAK,IAAI8B,IAAI,CAAb,EAAgBA,IAAItC,WAAWuC,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1C,cAAMY,YAAYlD,WAAWsC,CAAX,CAAlB;AACA,cAAMa,OAAO3C,MAAM,OAAO0C,SAAb,CAAb;AACA,cAAME,aAAa,CAAC,CAAC,KAAKvC,QAAL,CAAcqC,SAAd,CAArB;;AAEA,cAAIC,QAAQ,CAACC,UAAb,EAAyB;AACvB,gBAAIC,UAAW,KAAKxC,QAAL,CAAcqC,SAAd,IAA2B1C,MAAM,OAAO0C,SAAb,CAA1C;AACA,iBAAK5B,EAAL,CAAQkB,EAAR,CAAW,YAAYU,UAAUI,WAAV,EAAvB,EAAgDD,OAAhD;AACD,WAHD,MAGO,IAAI,CAACF,IAAD,IAASC,UAAb,EAAyB;AAC9B;AACA,iBAAK9B,EAAL,CAAQmB,GAAR,CACE,YAAYS,UAAUI,WAAV,EADd,EAEE,KAAKzC,QAAL,CAAcqC,SAAd,CAFF;AAIA,mBAAO,KAAKrC,QAAL,CAAcqC,SAAd,CAAP;AACD;AACF;AACF;AAvJgD;AAAA;AAAA,yCAyJ9B1B,MAzJ8B,EAyJtB;AACzB,YAAI,KAAKhB,KAAL,CAAWoC,GAAf,EAAoB;AAClBpB,mBAAS,4BAAa,EAAb,EAAiBA,MAAjB,CAAT;AACA,sCAAaA,MAAb,EAAqB,KAAKsB,OAAL,CAAatB,MAAb,CAArB;AACD;;AAED,eAAOA,MAAP;AACD;AAhKgD;AAAA;AAAA,sCAkKjC;AACd,eAAO,KAAKF,EAAL,CAAQiC,aAAR,CAAsBC,qBAAtB,EAAP;AACD;AApKgD;AAAA;AAAA,8BAsKzChC,MAtKyC,EAsKjC;AACd,YAAIiC,aAAJ;AACAjC,iBAASA,UAAU,KAAKhB,KAAL,CAAWgB,MAA9B;AACA,YAAMkC,cAAclC,SAASA,OAAOmC,KAAhB,GAAwB,IAA5C;AACA,YAAMC,eAAepC,SAASA,OAAOqC,MAAhB,GAAyB,IAA9C;AACA,YAAMC,WAAW,6BAAUJ,WAAV,CAAjB;AACA,YAAMK,YAAY,6BAAUH,YAAV,CAAlB;;AAEA,YAAI,CAACE,QAAD,IAAa,CAACC,SAAlB,EAA6B;AAC3BN,iBAAO,KAAKO,aAAL,EAAP;AACD;;AAED,eAAO;AACLL,iBAAOG,WAAWG,SAASP,WAAT,CAAX,GAAmCD,KAAKE,KAD1C;AAELE,kBAAQE,YAAYE,SAASL,YAAT,CAAZ,GAAqCH,KAAKI;AAF7C,SAAP;AAID;AAtLgD;AAAA;AAAA,+BAwLxC;AACP,eACE;AACE,iBAAO;AACLK,sBAAU,UADL;AAELC,qBAAS;AAFJ,WADT;AAKE,eAAK,KAAKjD;AALZ,UADF;AASD;AAlMgD;;AAAA;AAAA;;AAqMnDX,kBAAgB6D,SAAhB,GAA4B;AAC1BxB,SAAK,oBAAUyB,IADW;AAE1B9C,UAAM,oBAAU+C,OAAV,CAAkB,oBAAUC,MAA5B,CAFoB;AAG1B7C,YAAQ,oBAAU6C,MAHQ;AAI1B/C,YAAQ,oBAAU+C,MAJQ;AAK1B5C,YAAQ,oBAAU2C,OAAV,CAAkB,oBAAUC,MAA5B,CALkB;AAM1B3C,mBAAe,oBAAU4C,IANC;AAO1B3C,aAAS,oBAAU2C,IAPO;AAQ1B9B,cAAU,oBAAU8B,IARM;AAS1BxB,WAAO,oBAAUqB;AATS,GAA5B;;AAYA,OAAK,IAAI/B,IAAI,CAAb,EAAgBA,IAAItC,WAAWuC,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1C/B,oBAAgB6D,SAAhB,CAA0B,OAAOpE,WAAWsC,CAAX,CAAjC,IAAkD,oBAAUkC,IAA5D;AACD;;AAEDjE,kBAAgBkE,YAAhB,GAA+B;AAC7BzB,WAAO,KADsB;AAE7BJ,SAAK,KAFwB;AAG7BrB,UAAM;AAHuB,GAA/B;;AAMA,SAAOhB,eAAP;AACD","file":"factory.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumeric from \"fast-isnumeric\";\nimport objectAssign from \"object-assign\";\n// import throttle from \"throttle-debounce/throttle\";\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  \"AfterExport\",\n  \"AfterPlot\",\n  \"Animated\",\n  \"AnimatingFrame\",\n  \"AnimationInterrupted\",\n  \"AutoSize\",\n  \"BeforeExport\",\n  \"ButtonClicked\",\n  \"Click\",\n  \"ClickAnnotation\",\n  \"Deselect\",\n  \"DoubleClick\",\n  \"Framework\",\n  \"Hover\",\n  \"Relayout\",\n  \"Restyle\",\n  \"Redraw\",\n  \"Selected\",\n  \"Selecting\",\n  \"SliderChange\",\n  \"SliderEnd\",\n  \"SliderStart\",\n  \"Transitioning\",\n  \"TransitionInterrupted\",\n  \"Unhover\",\n];\n\nconst updateEvents = [\n  \"plotly_restyle\",\n  \"plotly_redraw\",\n  \"plotly_relayout\",\n  \"plotly_doubleclick\",\n  \"plotly_animated\",\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== \"undefined\";\n\nexport default function plotComponentFactory(Plotly) {\n  const hasReactAPIMethod = !!Plotly.react;\n\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n\n      //this.handleUpdate = throttle(0, this.handleUpdate.bind(this));\n      this.handleUpdate = this.handleUpdate.bind(this);\n    }\n\n    componentDidMount() {\n      this.p = this.p\n        .then(() => {\n          return Plotly.newPlot(this.el, {\n            data: this.props.data,\n            layout: this.sizeAdjustedLayout(this.props.layout),\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(this.attachUpdateEvents)\n        .then(() => this.syncWindowResize(null, false))\n        .then(() => this.syncEventHandlers())\n        .then(\n          () => {\n            this.props.onInitialized && this.props.onInitialized(this.el);\n          },\n          () => {\n            this.props.onError && this.props.onError();\n          }\n        );\n    }\n\n    componentWillReceiveProps(nextProps) {\n      let nextLayout = this.sizeAdjustedLayout(nextProps.layout);\n\n      this.p = this.p\n        .then(() => {\n          if (hasReactAPIMethod) {\n            return Plotly.react(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          } else {\n            return Plotly.newPlot(this.el, {\n              data: nextProps.data,\n              layout: nextLayout,\n              config: nextProps.config,\n              frames: nextProps.frames,\n            });\n          }\n        })\n        .then(() => this.syncEventHandlers(nextProps))\n        .then(() => this.syncWindowResize(nextProps))\n        .then(() => this.handleUpdate(nextProps))\n        .catch(err => {\n          this.props.onError && this.props.onError(err);\n        });\n    }\n\n    componentWillUnmount() {\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener(\"resize\", this.handleResize);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.on(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.off) return;\n\n      for (let i = 0; i < updateEvents.length; i++) {\n        this.el.off(updateEvents[i], this.handleUpdate);\n      }\n    }\n\n    handleUpdate(props) {\n      props = props || this.props;\n      if (props.onUpdate && typeof props.onUpdate === \"function\") {\n        props.onUpdate(this.el);\n      }\n    }\n\n    syncWindowResize(props, invoke) {\n      props = props || this.props;\n      if (!isBrowser) return;\n\n      if (props.fit && !this.resizeHandler) {\n        this.resizeHandler = () => {\n          return Plotly.relayout(this.el, this.getSize());\n        };\n        window.addEventListener(\"resize\", this.resizeHandler);\n\n        if (invoke) return this.resizeHandler();\n      } else if (!props.fit && this.resizeHandler) {\n        window.removeEventListener(\"resize\", this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers(props) {\n      // Allow use of nextProps if passed explicitly:\n      props = props || this.props;\n\n      for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const prop = props[\"on\" + eventName];\n        const hasHandler = !!this.handlers[eventName];\n\n        if (prop && !hasHandler) {\n          let handler = (this.handlers[eventName] = props[\"on\" + eventName]);\n          this.el.on(\"plotly_\" + eventName.toLowerCase(), handler);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.el.off(\n            \"plotly_\" + eventName.toLowerCase(),\n            this.handlers[eventName]\n          );\n          delete this.handlers[eventName];\n        }\n      }\n    }\n\n    sizeAdjustedLayout(layout) {\n      if (this.props.fit) {\n        layout = objectAssign({}, layout);\n        objectAssign(layout, this.getSize(layout));\n      }\n\n      return layout;\n    }\n\n    getParentSize() {\n      return this.el.parentElement.getBoundingClientRect();\n    }\n\n    getSize(layout) {\n      let rect;\n      layout = layout || this.props.layout;\n      const layoutWidth = layout ? layout.width : null;\n      const layoutHeight = layout ? layout.height : null;\n      const hasWidth = isNumeric(layoutWidth);\n      const hasHeight = isNumeric(layoutHeight);\n\n      if (!hasWidth || !hasHeight) {\n        rect = this.getParentSize();\n      }\n\n      return {\n        width: hasWidth ? parseInt(layoutWidth) : rect.width,\n        height: hasHeight ? parseInt(layoutHeight) : rect.height,\n      };\n    }\n\n    render() {\n      return (\n        <div\n          style={{\n            position: \"relative\",\n            display: \"inline-block\",\n          }}\n          ref={this.getRef}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    fit: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    onInitialized: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n  };\n\n  for (let i = 0; i < eventNames.length; i++) {\n    PlotlyComponent.propTypes[\"on\" + eventNames[i]] = PropTypes.func;\n  }\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    fit: false,\n    data: [],\n  };\n\n  return PlotlyComponent;\n}\n"]}